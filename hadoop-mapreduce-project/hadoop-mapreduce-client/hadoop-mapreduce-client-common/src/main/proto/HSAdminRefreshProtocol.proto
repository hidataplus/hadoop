/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";
option java_package = "org.apache.hadoop.mapreduce.v2.hs.proto";
option java_outer_classname = "HSAdminRefreshProtocolProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
package hadoop.mapreduce;

/**
 *  refresh admin acls request.
 */
message RefreshAdminAclsRequestProto {
}

/**
 * Response for refresh admin acls.
 */
message RefreshAdminAclsResponseProto {
}

/**
 *  refresh loaded job cache request.
 */
message RefreshLoadedJobCacheRequestProto {
}

/**
 * Response for refresh loaded job cache.
 */
message RefreshLoadedJobCacheResponseProto {
}

/**
 *  refresh job retention settings request.
 */
message RefreshJobRetentionSettingsRequestProto {
}

/**
 * Response for refresh job retention.
 */
message RefreshJobRetentionSettingsResponseProto {
}

/*
 *  refresh log retention request.
 */
message RefreshLogRetentionSettingsRequestProto {
}

/**
 * Response for refresh log retention.
 */
message RefreshLogRetentionSettingsResponseProto {
}

/**
 * Refresh Protocols implemented by the History server
 */
service HSAdminRefreshProtocolService {
  /**
   * Refresh admin acls
   */
  rpc refreshAdminAcls(RefreshAdminAclsRequestProto)
      returns(RefreshAdminAclsResponseProto);
  
  /**
   * Refresh loaded job cache
   */
  rpc refreshLoadedJobCache(RefreshLoadedJobCacheRequestProto)
      returns(RefreshLoadedJobCacheResponseProto);
      
  /**
   * Refresh job retention.
   */
  rpc refreshJobRetentionSettings(RefreshJobRetentionSettingsRequestProto)
      returns(RefreshJobRetentionSettingsResponseProto);

   /**
   * Refresh log retention
   */
  rpc refreshLogRetentionSettings(RefreshLogRetentionSettingsRequestProto)
      returns(RefreshLogRetentionSettingsResponseProto);
}
